version: "3"
services:
  zoo1:
    image: ${ZOOKEEPER_DOCKER_IMAGE_NAME:-wurstmeister/zookeeper}
    container_name: zoo1
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    networks:
      zoo_kafka:
        ipv4_address: 172.18.0.11

  zoo2:
    image: ${ZOOKEEPER_DOCKER_IMAGE_NAME:-wurstmeister/zookeeper}
    container_name: zoo2
    hostname: zoo2
    ports:
      - "2182:2181"
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    networks:
      zoo_kafka:
        ipv4_address: 172.18.0.12

  zoo3:
    image: ${ZOOKEEPER_DOCKER_IMAGE_NAME:-wurstmeister/zookeeper}
    container_name: zoo3
    hostname: zoo3
    ports:
      - "2183:2181"
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    networks:
      zoo_kafka:
        ipv4_address: 172.18.0.13

  kafka1:
    image: ${KAFKA_DOCKER_IMAGE_NAME:-wurstmeister/kafka}
    container_name: kafka1
    hostname: kafka1
    ports:
      - "9092:9092"
    depends_on:
      - zoo1
      - zoo2
      - zoo3
    links:
      - zoo1
      - zoo2
      - zoo3
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181,zoo2:2181,zoo3:2181
      KAFKA_ADVERTISED_HOST_NAME: 172.18.0.14
    volumes:
      - ./kafka1:/kafka/kafka\-logs\-kafka1
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      zoo_kafka:
        ipv4_address: 172.18.0.14

networks:
  zoo_kafka:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.host_binding_ipv4: 0.0.0.0
      com.docker.network.bridge.default_bridge: "true"
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.driver.mtu: "1500"
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16
